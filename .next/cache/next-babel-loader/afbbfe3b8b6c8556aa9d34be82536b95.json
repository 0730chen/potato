{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\H5\\\\fanqitime\\\\component\\\\Dialog.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nexport default function Dialog() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      x = _useState2[0],\n      setX = _useState2[1];\n\n  var openModal = function openModal() {\n    var close = modal(__jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, \"\\u4F60\\u597D\", __jsx(\"button\", {\n      onClick: function onClick() {\n        return close();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, \"close\")));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"\\u8FD9\\u662F\\u4E00\\u4E2A\\u5F39\\u7A97\", __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"\\u786E\\u5B9A\"), __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"\\u53D6\\u6D88\"));\n}\n;","map":{"version":3,"sources":["C:/H5/fanqitime/component/Dialog.js"],"names":["Dialog","useState","x","setX","openModal","close","modal"],"mappings":";;;;AAEA,eAAe,SAASA,MAAT,GAAkB;AAAA,kBACZC,QAAQ,EADI;AAAA;AAAA,MACtBC,CADsB;AAAA,MACpBC,IADoB;;AAE7B,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAI;AAClB,QAAMC,KAAK,GAAGC,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAChB;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMD,KAAK,EAAX;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADgB,CAAD,CAAnB;AAGH,GAJD;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ;AAMH;AAAA","sourcesContent":["\r\n\r\nexport default function Dialog() {\r\n    const [x,setX] = useState()\r\n    const openModal = ()=>{\r\n        const close = modal(<h1>你好\r\n            <button onClick={() => close()}>close</button>\r\n        </h1>)\r\n    }\r\n    return (\r\n        <div>这是一个弹窗\r\n            <button>确定</button>\r\n            <button>取消</button>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}