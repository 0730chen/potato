{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nvar initialState = {\n  count: 0\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'add':\n      return {\n        count: state.count + 1\n      };\n      break;\n\n    default:\n      return state;\n  }\n} // 这里暴露出的是创建store的工厂方法\n// 每次渲染都需要重新创建一个store实例\n// 防止服务端一直复用旧实例 无法和客户端状态同步\n\n\nexport default function initializeStore() {\n  var store = createStore(reducer, initialState, applyMiddleware(ReduxThunk));\n  return store;\n}","map":{"version":3,"sources":["C:/H5/fanqitime/redux/store.js"],"names":["createStore","applyMiddleware","ReduxThunk","initialState","count","reducer","state","action","type","initializeStore","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAO;AACHJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADlB,OAAP;AAGA;;AAEJ;AACI,aAAOE,KAAP;AARR;AAUH,C,CAED;AACA;AACA;;;AACA,eAAe,SAASG,eAAT,GAA2B;AACtC,MAAMC,KAAK,GAAGV,WAAW,CAACK,OAAD,EAAUF,YAAV,EAAwBF,eAAe,CAACC,UAAD,CAAvC,CAAzB;AACA,SAAOQ,KAAP;AACH","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nconst initialState = {\r\n    count: 0,\r\n}\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return {\r\n                count: state.count + 1,\r\n            }\r\n            break\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// 这里暴露出的是创建store的工厂方法\r\n// 每次渲染都需要重新创建一个store实例\r\n// 防止服务端一直复用旧实例 无法和客户端状态同步\r\nexport default function initializeStore() {\r\n    const store = createStore(reducer, initialState, applyMiddleware(ReduxThunk))\r\n    return store\r\n}"]},"metadata":{},"sourceType":"module"}